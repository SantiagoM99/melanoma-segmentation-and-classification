Melanoma Segmentation models (melanoma_segmentation.models)
=====================================

This subpackage contains modules for advanced image segmentation models and utility functions for melanoma segmentation tasks. Each module includes well-defined architectures, preprocessing utilities, and augmentation tools.

Attention U-Net Model for Image Segmentation
--------------------------------------------

This module implements the Attention U-Net model, an advanced architecture for image segmentation tasks. 
It uses attention mechanisms in the decoder path to focus on the most relevant features from the encoder's 
skip connections, improving segmentation accuracy.

Classes
^^^^^^^^
- AttentionBlock: Enhances skip connections with attention mechanisms.
- AttUNet: Defines the complete Attention U-Net architecture.

Usage
^^^^^
.. code-block:: python

    from melanoma_segmentation.models.att_unet import AttUNet

    model = AttUNet(in_channels=3, out_channels=1)
    print(model)

.. automodule:: melanoma_segmentation.models.attention_unet
   :members:
   :undoc-members:
   :show-inheritance:

R2AttUNet Model for Image Segmentation
--------------------------------------

This module implements the R2AttUNet model, which combines Residual Recurrent Convolutions with Attention mechanisms
in a U-Net-like architecture. It is designed for image segmentation tasks, leveraging recurrence for feature refinement 
and attention for focusing on relevant features.

Overview
^^^^^^^^
- **Residual Recurrent Blocks**: Enhanced feature learning using recurrent convolutions and residual connections.
- **Attention Blocks**: Focus on the most important features during decoding.
- **Upsampling and Skip Connections**: Recover spatial information.

Usage
^^^^^
.. code-block:: python

    from melanoma_segmentation.models.r2att_unet import R2AttUNet

    model = R2AttUNet(ch_in=3, ch_out=1, t=2)
    print(model)

.. automodule:: melanoma_segmentation.models.r2u_att_unet
   :members:
   :undoc-members:
   :show-inheritance:

R2U-Net Model for Image Segmentation
-------------------------------------

This module implements the R2U-Net architecture, an extension of U-Net that incorporates residual recurrent blocks 
to improve feature learning through recurrence and residual connections.

Overview
^^^^^^^^
- **RecurrentBlock**: Implements recurrent convolutions for repeated feature refinement.
- **ResidualRecurrentBlock**: Combines residual connections with recurrent convolutions for efficient feature extraction.
- **R2UNet**: Implements the full R2U-Net architecture with an encoder-decoder structure and skip connections.

Usage
^^^^^
.. code-block:: python

    from melanoma_segmentation.models.r2unet import R2UNet

    model = R2UNet(in_channels=3, out_channels=1, t=2)
    print(model)

.. automodule:: melanoma_segmentation.models.residual_recurrent_unet
   :members:
   :undoc-members:
   :show-inheritance:

TransUNet Model for Image Segmentation
--------------------------------------

This module implements the TransUNet architecture, which combines convolutional encoders with a transformer-based 
bottleneck for modeling both local and global dependencies in image segmentation tasks.

Classes
^^^^^^^^
- DepthwiseConvBlock: Efficient feature extraction using depthwise and pointwise convolutions.
- TransformerBlock: Captures global dependencies with multi-head self-attention.
- TransUNet: Combines convolutional encoders, transformer bottleneck, and convolutional decoders for segmentation tasks.

Usage
^^^^^
.. code-block:: python

    from transunet import TransUNet

    model = TransUNet(in_channels=3, out_channels=1, transformer_dim=256, num_heads=4, transformer_depth=6)
    output = model(input_tensor)

.. automodule:: melanoma_segmentation.models.trans_unet
   :members:
   :undoc-members:
   :show-inheritance:

Image Transformation Utility
----------------------------

This module provides a utility function to generate image preprocessing and augmentation pipelines using the 
Albumentations library. Transformations vary depending on the phase (e.g., training, validation/testing).

Functions
^^^^^^^^^
- **get_transforms**: Generates image preprocessing and augmentation pipelines.

Usage
^^^^^
.. code-block:: python

    from transforms import get_transforms

    train_transforms = get_transforms(phase="train", image_size=256)
    test_transforms = get_transforms(phase="test", image_size=256)

The `train_v2` phase can be used for advanced augmentations:

.. code-block:: python

    advanced_transforms = get_transforms(phase="train_v2", image_size=256)

.. automodule:: melanoma_segmentation.models.transform
   :members:
   :undoc-members:
   :show-inheritance:

U-Net Model for Image Segmentation
-----------------------------------

This module implements the U-Net architecture for image segmentation tasks, along with its building blocks.
U-Net is an encoder-decoder network with skip connections to preserve spatial information at multiple resolutions.

Classes
^^^^^^^^
- ConvBlock: Implements a convolutional block with batch normalization and ReLU activation.
- UpConv: Implements an upsampling block using transposed convolution.
- UNet: Implements the full U-Net architecture with an encoder-decoder structure and skip connections.

Usage
^^^^^
.. code-block:: python

    from melanoma_segmentation.models.unet import UNet

    model = UNet(in_channels=3, out_channels=1)
    print(model)

.. automodule:: melanoma_segmentation.models.unet
   :members:
   :undoc-members:
   :show-inheritance:

Module contents
---------------

.. automodule:: melanoma_segmentation.models
   :members:
   :undoc-members:
   :show-inheritance:
